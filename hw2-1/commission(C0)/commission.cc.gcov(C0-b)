        -:    0:Source:commission.cc
        -:    0:Graph:commission.gcno
        -:    0:Data:commission.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "commission.h"
        -:    2:#include <string>
        -:    3:#include <sstream>
        -:    4:
        -:    5:using namespace std;
        -:    6:
function _Z10double2strRd called 131 returned 100% blocks executed 80%
      131:    7:string double2str(double &dbl) {
      131:    8:	ostringstream strs;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
      131:    9:	strs << dbl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
      131:   10:	string str = strs.str();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
      131:   11:	return str;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 never executed
        -:   12:}
        -:   13:
function _Z10commissioniii called 425 returned 100% blocks executed 77%
      425:   14:string commission(int locks, int stocks, int barrels){
      425:   15:	int totalLocks = 0;
      425:   16:	int totalStocks = 0;
      425:   17:	int totalBarrels = 0;
      425:   18:	double lockprice = 45;
      425:   19:	double stockprice = 30;
      425:   20:	double barrelprice = 25;
        -:   21:	double lockSales;
        -:   22:	double stockSales;
        -:   23:	double barrelSales;
        -:   24:	double sales;
        -:   25:	double commission;
      425:   26:    bool flagA = false;
      425:   27:    bool flagB = false;
      425:   28:    bool flagC = false;
        -:   29:    
      425:   30:	if((locks < 1) || (locks > 70))
branch  0 taken 74% (fallthrough)
branch  1 taken 26%
branch  2 taken 17% (fallthrough)
branch  3 taken 83%
      163:   31:        flagA = true;
      425:   32:	if(( stocks< 1) || (stocks > 80))
branch  0 taken 85% (fallthrough)
branch  1 taken 15%
branch  2 taken 17% (fallthrough)
branch  3 taken 83%
      125:   33:        flagB = true;
      425:   34:	if((barrels < 1) || (barrels > 90))
branch  0 taken 85% (fallthrough)
branch  1 taken 15%
branch  2 taken 17% (fallthrough)
branch  3 taken 83%
      125:   35:        flagC = true;
        -:   36:        
      425:   37:    if(flagA&&flagB&&flagC)
branch  0 taken 38% (fallthrough)
branch  1 taken 62%
branch  2 taken 29% (fallthrough)
branch  3 taken 71%
branch  4 taken 31% (fallthrough)
branch  5 taken 69%
       15:   38:    	if(locks == -1)
branch  0 taken 27% (fallthrough)
branch  1 taken 73%
        4:   39:    		return "stocks not in 1...80, barrels not in 1...90";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        -:   40:    	else
       11:   41:        	return "locks not in 1...70, stocks not in 1...80, barrels not in 1...90";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
      410:   42:    else if(flagA&&flagB)
branch  0 taken 36% (fallthrough)
branch  1 taken 64%
branch  2 taken 22% (fallthrough)
branch  3 taken 78%
       33:   43:    	if(locks == -1)
branch  0 taken 30% (fallthrough)
branch  1 taken 70%
       10:   44:    		return "stocks not in 1...80";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        -:   45:    	else
       23:   46:        	return "locks not in 1...70, stocks not in 1...80";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
      377:   47:    else if(flagA&&flagC)
branch  0 taken 31% (fallthrough)
branch  1 taken 69%
branch  2 taken 29% (fallthrough)
branch  3 taken 71%
       33:   48:    	if(locks == -1)
branch  0 taken 30% (fallthrough)
branch  1 taken 70%
       10:   49:    		return "barrels not in 1...90";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        -:   50:    	else
       23:   51:        	return "locks not in 1...70, barrels not in 1...90";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
      344:   52:    else if(flagB&&flagC)
branch  0 taken 22% (fallthrough)
branch  1 taken 78%
branch  2 taken 30% (fallthrough)
branch  3 taken 70%
       23:   53:        return "stocks not in 1...80, barrels not in 1...90";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
      321:   54:    else if(flagA)
branch  0 taken 26% (fallthrough)
branch  1 taken 74%
       82:   55:    	if(locks == -1)
branch  0 taken 34% (fallthrough)
branch  1 taken 66%
       28:   56:    		return "Program terminates";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        -:   57:    	else
       54:   58:        	return "locks not in 1...70";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
      239:   59:    else if(flagB)
branch  0 taken 23% (fallthrough)
branch  1 taken 77%
       54:   60:        return "stocks not in 1...80";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
      185:   61:    else if(flagC)
branch  0 taken 29% (fallthrough)
branch  1 taken 71%
       54:   62:        return "barrels not in 1...90";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        -:   63:	
      131:   64:	totalLocks = totalLocks + locks;
      131:   65:	totalStocks = totalStocks + stocks;
      131:   66:	totalBarrels = totalBarrels + barrels;
      131:   67:	lockSales = totalLocks * lockprice;
      131:   68:	stockSales = totalStocks * stockprice;
      131:   69:	barrelSales = totalBarrels * barrelprice;
      131:   70:	sales = lockSales + stockSales + barrelSales;
      131:   71:	if(sales > 1800){
branch  0 taken 83% (fallthrough)
branch  1 taken 17%
      109:   72:		commission = 0.1 * 1000;           
      109:   73:    	commission = commission + 0.15 * 800;
      109:   74:    	commission = commission + 0.2 * (sales - 1800);
        -:   75:	}
       22:   76:	else if(sales > 1000){
branch  0 taken 55% (fallthrough)
branch  1 taken 45%
       12:   77:		commission = 0.1 * 1000;             
       12:   78:		commission = commission + 0.15 * (sales - 1000);
        -:   79:	}
        -:   80:	else
       10:   81:		commission = 0.1 * sales;
      131:   82:	return "$" + double2str(commission);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 never executed
        -:   83:}
        -:   84:
