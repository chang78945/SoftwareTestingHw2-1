        -:    0:Source:commission.cc
        -:    0:Graph:commission.gcno
        -:    0:Data:commission.gcda
        -:    0:Runs:2
        -:    0:Programs:1
        -:    1:#include "commission.h"
        -:    2:#include <string>
        -:    3:#include <sstream>
        -:    4:
        -:    5:using namespace std;
        -:    6:
function _Z10double2strRd called 12 returned 100% blocks executed 80%
       12:    7:string double2str(double &dbl) {
       12:    8:	ostringstream strs;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       12:    9:	strs << dbl;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       12:   10:	string str = strs.str();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       12:   11:	return str;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 never executed
        -:   12:}
        -:   13:
function _Z7str2intSs called 220 returned 100% blocks executed 75%
      220:   14:int str2int(string str) {
        -:   15:	int val;
      220:   16:	istringstream is(str);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
      220:   17:	is>>val;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
      220:   18:	return val;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 never executed
        -:   19:}
        -:   20:
function _Z10commissionSs called 40 returned 100% blocks executed 87%
       40:   21:string commission(string str){
       40:   22:	int num = 0;
       40:   23:	int totalLocks = 0;
       40:   24:	int totalStocks = 0;
       40:   25:	int totalBarrels = 0;
       40:   26:	double lockprice = 45;
       40:   27:	double stockprice = 30;
       40:   28:	double barrelprice = 25;
        -:   29:	double lockSales, stockSales, barrelSales, sales, commission;
       40:   30:	bool flag = false;
       40:   31:	bool flagA = false;
       40:   32:	bool flagB = false;
       40:   33:	bool flagC = false;
       40:   34:	string sub_str, output;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
        -:   35:	
       80:   36:	stringstream ss(str);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
call    7 never executed
call    8 never executed
      300:   37:	while(getline(ss,sub_str,',')&&!flag){
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
branch  6 taken 85% (fallthrough)
branch  7 taken 15%
branch  8 taken 100% (fallthrough)
branch  9 taken 0%
branch 10 taken 85%
branch 11 taken 15% (fallthrough)
      220:   38:		int val = str2int(sub_str);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 never executed
      220:   39:		if(num == 0){
branch  0 taken 45% (fallthrough)
branch  1 taken 55%
      100:   40:			if(val == -1)
branch  0 taken 40% (fallthrough)
branch  1 taken 60%
       40:   41:				flag = true;
       60:   42:			else if(( val< 1) || (val > 70))
branch  0 taken 73% (fallthrough)
branch  1 taken 27%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
       16:   43:				flagA = true;
        -:   44:			else
       44:   45:				totalLocks = totalLocks + val;
        -:   46:		}
      120:   47:		else if(num == 1){
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
       60:   48:			if(( val< 1) || (val > 80))
branch  0 taken 73% (fallthrough)
branch  1 taken 27%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
       16:   49:				flagB = true;
        -:   50:			else
       44:   51:				totalStocks = totalStocks + val;
        -:   52:		}
        -:   53:		else{
       60:   54:			if((val < 1) || (val > 90))
branch  0 taken 73% (fallthrough)
branch  1 taken 27%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
       16:   55:				flagC = true;
        -:   56:			else
       44:   57:				totalBarrels = totalBarrels + val;
        -:   58:		}
      220:   59:		num++;
      220:   60:		if(num==3)
branch  0 taken 27% (fallthrough)
branch  1 taken 73%
       60:   61:			num = 0;
        -:   62:	}
        -:   63:	
       40:   64:	if(flagA&&flagB&&flagC)
branch  0 taken 40% (fallthrough)
branch  1 taken 60%
branch  2 taken 50% (fallthrough)
branch  3 taken 50%
branch  4 taken 50% (fallthrough)
branch  5 taken 50%
        4:   65:		output = "locks not in 1...70, stocks not in 1...80, barrels not in 1...90";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       36:   66:	else if(flagA&&flagB)
branch  0 taken 33% (fallthrough)
branch  1 taken 67%
branch  2 taken 33% (fallthrough)
branch  3 taken 67%
        4:   67:		output = "locks not in 1...70, stocks not in 1...80";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       32:   68:	else if(flagA&&flagC)
branch  0 taken 25% (fallthrough)
branch  1 taken 75%
branch  2 taken 50% (fallthrough)
branch  3 taken 50%
        4:   69:		output = "locks not in 1...70, barrels not in 1...90";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       28:   70:	else if(flagB&&flagC)
branch  0 taken 29% (fallthrough)
branch  1 taken 71%
branch  2 taken 50% (fallthrough)
branch  3 taken 50%
        4:   71:		output = "stocks not in 1...80, barrels not in 1...90";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       24:   72:	else if(flagA)
branch  0 taken 17% (fallthrough)
branch  1 taken 83%
        4:   73:		output = "locks not in 1...70";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       20:   74:	else if(flagB)
branch  0 taken 20% (fallthrough)
branch  1 taken 80%
        4:   75:		output = "stocks not in 1...80";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       16:   76:	else if(flagC)
branch  0 taken 25% (fallthrough)
branch  1 taken 75%
        4:   77:		output = "barrels not in 1...90";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   78:	else{
       12:   79:		lockSales = totalLocks * lockprice;
       12:   80:		stockSales = totalStocks * stockprice;
       12:   81:		barrelSales = totalBarrels * barrelprice;
       12:   82:		sales = lockSales + stockSales + barrelSales;
        -:   83:		
       12:   84:		if(sales > 1800){
branch  0 taken 67% (fallthrough)
branch  1 taken 33%
        8:   85:			commission = 0.1 * 1000;           
        8:   86:			commission = commission + 0.15 * 800;
        8:   87:			commission = commission + 0.2 * (sales - 1800);
        -:   88:		}
        4:   89:		else if(sales > 1000){
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        2:   90:			commission = 0.1 * 1000;             
        2:   91:			commission = commission + 0.15 * (sales - 1000);
        -:   92:		}
        -:   93:		else
        2:   94:			commission = 0.1 * sales;
       12:   95:		output = "$" + double2str(commission);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
call   12 returned 100%
branch 13 taken 100% (fallthrough)
branch 14 taken 0% (throw)
call   15 never executed
call   16 never executed
        -:   96:	}
       80:   97:	return output;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 never executed
        -:   98:}
        -:   99:
