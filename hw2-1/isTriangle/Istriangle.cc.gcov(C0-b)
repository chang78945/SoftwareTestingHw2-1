        -:    0:Source:Istriangle.cc
        -:    0:Graph:Istriangle.gcno
        -:    0:Data:Istriangle.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "Istriangle.h"
        -:    2:#include <string>
        -:    3:
        -:    4:using namespace std;
        -:    5:
function _Z21determineTriangleTypeiii called 429 returned 100% blocks executed 98%
      429:    6:string determineTriangleType(int a, int b, int c){
      429:    7:    bool flagA = false;
      429:    8:    bool flagB = false;
      429:    9:    bool flagC = false;
      429:   10:    string output;
call    0 returned 100%
        -:   11:    
      429:   12:    if((a < 1) || (a > 200))
branch  0 taken 87% (fallthrough)
branch  1 taken 13%
branch  2 taken 15% (fallthrough)
branch  3 taken 85%
      111:   13:        flagA = true;
      429:   14:    if((b < 1) || (b > 200))
branch  0 taken 87% (fallthrough)
branch  1 taken 13%
branch  2 taken 15% (fallthrough)
branch  3 taken 85%
      111:   15:        flagB = true;
      429:   16:    if((c < 1) || (c > 200))
branch  0 taken 87% (fallthrough)
branch  1 taken 13%
branch  2 taken 15% (fallthrough)
branch  3 taken 85%
      111:   17:        flagC = true;
        -:   18:    
      429:   19:    if(flagA&&flagB&&flagC)
branch  0 taken 26% (fallthrough)
branch  1 taken 74%
branch  2 taken 31% (fallthrough)
branch  3 taken 69%
branch  4 taken 32% (fallthrough)
branch  5 taken 68%
       11:   20:        output = "Value of a,b,c is not in the range of permitted values";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
      418:   21:    else if(flagA&&flagB)
branch  0 taken 24% (fallthrough)
branch  1 taken 76%
branch  2 taken 23% (fallthrough)
branch  3 taken 77%
       23:   22:        output = "Value of a,b is not in the range of permitted values";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
      395:   23:    else if(flagA&&flagC)
branch  0 taken 19% (fallthrough)
branch  1 taken 81%
branch  2 taken 30% (fallthrough)
branch  3 taken 70%
       23:   24:        output = "Value of a,c is not in the range of permitted values";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
      372:   25:    else if(flagB&&flagC)
branch  0 taken 21% (fallthrough)
branch  1 taken 79%
branch  2 taken 30% (fallthrough)
branch  3 taken 70%
       23:   26:        output = "Value of b,c is not in the range of permitted values";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
      349:   27:    else if(flagA)
branch  0 taken 15% (fallthrough)
branch  1 taken 85%
       54:   28:        output = "Value of a is not in the range of permitted values";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
      295:   29:    else if(flagB)
branch  0 taken 18% (fallthrough)
branch  1 taken 82%
       54:   30:        output = "Value of b is not in the range of permitted values";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
      241:   31:    else if(flagC)
branch  0 taken 22% (fallthrough)
branch  1 taken 78%
       54:   32:        output = "Value of c is not in the range of permitted values";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   33:    else
        -:   34:	{
      187:   35:		if((a >= b + c)||(b >= a + c)||(c >= a + b))
branch  0 taken 83% (fallthrough)
branch  1 taken 17%
branch  2 taken 81% (fallthrough)
branch  3 taken 19%
branch  4 taken 24% (fallthrough)
branch  5 taken 76%
       91:   36:			output = "Not a triangle";			
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   37:		else
        -:   38:		{
       96:   39:			if((a == b)&&(b == c))
branch  0 taken 32% (fallthrough)
branch  1 taken 68%
branch  2 taken 39% (fallthrough)
branch  3 taken 61%
       12:   40:				output = "Equilateral";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       84:   41:			else if((a == b)&&(a != c))
branch  0 taken 23% (fallthrough)
branch  1 taken 77%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
       19:   42:				output = "Isosceles";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       65:   43:			else if((a == c)&&(a != b))
branch  0 taken 28% (fallthrough)
branch  1 taken 72%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
       18:   44:				output = "Isosceles";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       47:   45:			else if((b == c)&&(b != a))
branch  0 taken 38% (fallthrough)
branch  1 taken 62%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
       18:   46:				output = "Isosceles";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   47:			else
       29:   48:				output = "Scalence";	
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   49:		}
        -:   50:	}
      429:   51:	return output;
call    0 never executed
        -:   52:}
        -:   53:
