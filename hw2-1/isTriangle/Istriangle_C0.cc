#include <limits.h>
#include "Istriangle.h"
#include "gtest/gtest.h"

//Boundary
TEST(IsTriangleTestBoundary, determineTriangleType) {		
		EXPECT_EQ("Value of a,b,c is not in the range of permitted values", determineTriangleType(0,0,0));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(0,0,1));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(0,0,2));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(0,0,100));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(0,0,199));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(0,0,200));
		EXPECT_EQ("Value of a,b,c is not in the range of permitted values", determineTriangleType(0,0,201));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(0,1,0));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,1,1));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,1,2));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,1,100));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,1,199));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,1,200));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(0,1,201));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(0,2,0));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,2,1));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,2,2));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,2,100));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,2,199));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,2,200));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(0,2,201));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(0,100,0));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,100,1));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,100,2));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,100,100));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,100,199));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,100,200));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(0,100,201));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(0,199,0));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,199,1));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,199,2));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,199,100));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,199,199));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,199,200));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(0,199,201));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(0,200,0));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,200,1));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,200,2));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,200,100));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,200,199));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,200,200));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(0,200,201));
		EXPECT_EQ("Value of a,b,c is not in the range of permitted values", determineTriangleType(0,201,0));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(0,201,1));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(0,201,2));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(0,201,100));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(0,201,199));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(0,201,200));
		EXPECT_EQ("Value of a,b,c is not in the range of permitted values", determineTriangleType(0,201,201));
		
			
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(1,0,0));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(1,0,1));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(1,0,2));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(1,0,100));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(1,0,199));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(1,0,200));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(1,0,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(1,1,0));
		EXPECT_EQ("Equilateral", determineTriangleType(1,1,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,1,2));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,1,100));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,1,199));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,1,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(1,1,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(1,2,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,2,1));
		EXPECT_EQ("Isosceles", determineTriangleType(1,2,2));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,2,100));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,2,199));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,2,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(1,2,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(1,100,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,100,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,100,2));
		EXPECT_EQ("Isosceles", determineTriangleType(1,100,100));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,100,199));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,100,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(1,100,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(1,199,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,199,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,199,2));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,199,100));
		EXPECT_EQ("Isosceles", determineTriangleType(1,199,199));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,199,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(1,199,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(1,200,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,200,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,200,2));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,200,100));
		EXPECT_EQ("Not a triangle", determineTriangleType(1,200,199));
		EXPECT_EQ("Isosceles", determineTriangleType(1,200,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(1,200,201));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(1,201,0));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(1,201,1));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(1,201,2));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(1,201,100));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(1,201,199));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(1,201,200));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(1,201,201));
		
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(2,0,0));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(2,0,1));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(2,0,2));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(2,0,100));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(2,0,199));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(2,0,200));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(2,0,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(2,1,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,1,1));
		EXPECT_EQ("Isosceles", determineTriangleType(2,1,2));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,1,100));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,1,199));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,1,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(2,1,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(2,2,0));
		EXPECT_EQ("Isosceles", determineTriangleType(2,2,1));
		EXPECT_EQ("Equilateral", determineTriangleType(2,2,2));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,2,100));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,2,199));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,2,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(2,2,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(2,100,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,100,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,100,2));
		EXPECT_EQ("Isosceles", determineTriangleType(2,100,100));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,100,199));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,100,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(2,100,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(2,199,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,199,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,199,2));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,199,100));
		EXPECT_EQ("Isosceles", determineTriangleType(2,199,199));
		EXPECT_EQ("Scalence", determineTriangleType(2,199,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(2,199,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(2,200,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,200,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,200,2));
		EXPECT_EQ("Not a triangle", determineTriangleType(2,200,100));
		EXPECT_EQ("Scalence", determineTriangleType(2,200,199));
		EXPECT_EQ("Isosceles", determineTriangleType(2,200,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(2,200,201));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(2,201,0));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(2,201,1));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(2,201,2));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(2,201,100));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(2,201,199));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(2,201,200));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(2,201,201));
		
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(100,0,0));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(100,0,1));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(100,0,2));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(100,0,100));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(100,0,199));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(100,0,200));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(100,0,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(100,1,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(100,1,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(100,1,2));
		EXPECT_EQ("Isosceles", determineTriangleType(100,1,100));
		EXPECT_EQ("Not a triangle", determineTriangleType(100,1,199));
		EXPECT_EQ("Not a triangle", determineTriangleType(100,1,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(100,1,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(100,2,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(100,2,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(100,2,2));
		EXPECT_EQ("Isosceles", determineTriangleType(100,2,100));
		EXPECT_EQ("Not a triangle", determineTriangleType(100,2,199));
		EXPECT_EQ("Not a triangle", determineTriangleType(100,2,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(100,2,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(100,100,0));
		EXPECT_EQ("Isosceles", determineTriangleType(100,100,1));
		EXPECT_EQ("Isosceles", determineTriangleType(100,100,2));
		EXPECT_EQ("Equilateral", determineTriangleType(100,100,100));
		EXPECT_EQ("Isosceles", determineTriangleType(100,100,199));
		EXPECT_EQ("Not a triangle", determineTriangleType(100,100,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(100,100,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(100,199,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(100,199,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(100,199,2));
		EXPECT_EQ("Isosceles", determineTriangleType(100,199,100));
		EXPECT_EQ("Isosceles", determineTriangleType(100,199,199));
		EXPECT_EQ("Scalence", determineTriangleType(100,199,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(100,199,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(100,200,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(100,200,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(100,200,2));
		EXPECT_EQ("Not a triangle", determineTriangleType(100,200,100));
		EXPECT_EQ("Scalence", determineTriangleType(100,200,199));
		EXPECT_EQ("Isosceles", determineTriangleType(100,200,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(100,200,201));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(100,201,0));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(100,201,1));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(100,201,2));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(100,201,100));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(100,201,199));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(100,201,200));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(100,201,201));
		
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(199,0,0));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(199,0,1));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(199,0,2));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(199,0,100));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(199,0,199));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(199,0,200));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(199,0,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(199,1,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(199,1,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(199,1,2));
		EXPECT_EQ("Not a triangle", determineTriangleType(199,1,100));
		EXPECT_EQ("Isosceles", determineTriangleType(199,1,199));
		EXPECT_EQ("Not a triangle", determineTriangleType(199,1,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(199,1,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(199,2,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(199,2,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(199,2,2));
		EXPECT_EQ("Not a triangle", determineTriangleType(199,2,100));
		EXPECT_EQ("Isosceles", determineTriangleType(199,2,199));
		EXPECT_EQ("Scalence", determineTriangleType(199,2,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(199,2,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(199,100,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(199,100,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(199,100,2));
		EXPECT_EQ("Isosceles", determineTriangleType(199,100,100));
		EXPECT_EQ("Isosceles", determineTriangleType(199,100,199));
		EXPECT_EQ("Scalence", determineTriangleType(199,100,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(199,100,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(199,199,0));
		EXPECT_EQ("Isosceles", determineTriangleType(199,199,1));
		EXPECT_EQ("Isosceles", determineTriangleType(199,199,2));
		EXPECT_EQ("Isosceles", determineTriangleType(199,199,100));
		EXPECT_EQ("Equilateral", determineTriangleType(199,199,199));
		EXPECT_EQ("Isosceles", determineTriangleType(199,199,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(199,199,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(199,200,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(199,200,1));
		EXPECT_EQ("Scalence", determineTriangleType(199,200,2));
		EXPECT_EQ("Scalence", determineTriangleType(199,200,100));
		EXPECT_EQ("Isosceles", determineTriangleType(199,200,199));
		EXPECT_EQ("Isosceles", determineTriangleType(199,200,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(199,200,201));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(199,201,0));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(199,201,1));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(199,201,2));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(199,201,100));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(199,201,199));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(199,201,200));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(199,201,201));
		
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(200,0,0));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(200,0,1));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(200,0,2));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(200,0,100));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(200,0,199));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(200,0,200));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(200,0,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(200,1,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(200,1,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(200,1,2));
		EXPECT_EQ("Not a triangle", determineTriangleType(200,1,100));
		EXPECT_EQ("Not a triangle", determineTriangleType(200,1,199));
		EXPECT_EQ("Isosceles", determineTriangleType(200,1,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(200,1,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(200,2,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(200,2,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(200,2,2));
		EXPECT_EQ("Not a triangle", determineTriangleType(200,2,100));
		EXPECT_EQ("Scalence", determineTriangleType(200,2,199));
		EXPECT_EQ("Isosceles", determineTriangleType(200,2,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(200,2,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(200,100,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(200,100,1));
		EXPECT_EQ("Not a triangle", determineTriangleType(200,100,2));
		EXPECT_EQ("Not a triangle", determineTriangleType(200,100,100));
		EXPECT_EQ("Scalence", determineTriangleType(200,100,199));
		EXPECT_EQ("Isosceles", determineTriangleType(200,100,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(200,100,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(200,199,0));
		EXPECT_EQ("Not a triangle", determineTriangleType(200,199,1));
		EXPECT_EQ("Scalence", determineTriangleType(200,199,2));
		EXPECT_EQ("Scalence", determineTriangleType(200,199,100));
		EXPECT_EQ("Isosceles", determineTriangleType(200,199,199));
		EXPECT_EQ("Isosceles", determineTriangleType(200,199,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(200,199,201));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(200,200,0));
		EXPECT_EQ("Isosceles", determineTriangleType(200,200,1));
		EXPECT_EQ("Isosceles", determineTriangleType(200,200,2));
		EXPECT_EQ("Isosceles", determineTriangleType(200,200,100));
		EXPECT_EQ("Isosceles", determineTriangleType(200,200,199));
		EXPECT_EQ("Equilateral", determineTriangleType(200,200,200));
		EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(200,200,201));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(200,201,0));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(200,201,1));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(200,201,2));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(200,201,100));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(200,201,199));
		EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(200,201,200));
		EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(200,201,201));
		
		EXPECT_EQ("Value of a,b,c is not in the range of permitted values", determineTriangleType(201,0,0));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(201,0,1));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(201,0,2));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(201,0,100));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(201,0,199));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(201,0,200));
		EXPECT_EQ("Value of a,b,c is not in the range of permitted values", determineTriangleType(201,0,201));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(201,1,0));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,1,1));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,1,2));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,1,100));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,1,199));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,1,200));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(201,1,201));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(201,2,0));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,2,1));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,2,2));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,2,100));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,2,199));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,2,200));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(201,2,201));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(201,100,0));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,100,1));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,100,2));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,100,100));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,100,199));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,100,200));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(201,100,201));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(201,199,0));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,199,1));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,199,2));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,199,100));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,199,199));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,199,200));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(201,199,201));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(201,200,0));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,200,1));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,200,2));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,200,100));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,200,199));
		EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,200,200));
		EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(201,200,201));
		EXPECT_EQ("Value of a,b,c is not in the range of permitted values", determineTriangleType(201,201,0));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(201,201,1));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(201,201,2));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(201,201,100));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(201,201,199));
		EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(201,201,200));
		EXPECT_EQ("Value of a,b,c is not in the range of permitted values", determineTriangleType(201,201,201));
}

//==============================================================

//Equivalence Class
TEST(IsTriangleEqivalenceClass, determineTriangleType) {
        EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(-1,5,5));
        EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(5,-1,5));
        EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(5,5,-1));
        EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,5,5));
        EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(5,201,5));
        EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(5,5,201));
        EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(-1,-1,5));
        EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(5,-1,-1));
        EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(-1,5,-1));
        EXPECT_EQ("Value of a,b,c is not in the range of permitted values", determineTriangleType(-1,-1,-1));
        EXPECT_EQ("Equilateral", determineTriangleType(5,5,5));
        EXPECT_EQ("Isosceles", determineTriangleType(2,2,3));
        EXPECT_EQ("Scalence", determineTriangleType(3,4,5));
        EXPECT_EQ("Not a triangle", determineTriangleType(4,1,2));
}
//==============================================================

//Edge Testing
TEST(IsTriangleEdgeTesting, determineTriangleType) {
        EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(0,5,5));
        EXPECT_EQ("Value of a is not in the range of permitted values", determineTriangleType(201,5,5));
        EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(5,0,5));
        EXPECT_EQ("Value of b is not in the range of permitted values", determineTriangleType(5,201,5));
        EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(5,5,0));
        EXPECT_EQ("Value of c is not in the range of permitted values", determineTriangleType(5,5,201));
        EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(0,0,5));
        EXPECT_EQ("Value of a,b is not in the range of permitted values", determineTriangleType(201,201,5));
        EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(0,5,0));
        EXPECT_EQ("Value of a,c is not in the range of permitted values", determineTriangleType(201,5,201));
        EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(5,0,0));
        EXPECT_EQ("Value of b,c is not in the range of permitted values", determineTriangleType(5,201,201));
        EXPECT_EQ("Value of a,b,c is not in the range of permitted values", determineTriangleType(0,0,0));
        EXPECT_EQ("Value of a,b,c is not in the range of permitted values", determineTriangleType(201,201,201));
        EXPECT_EQ("Equilateral", determineTriangleType(1,1,1));
        EXPECT_EQ("Equilateral", determineTriangleType(2,2,2));
        EXPECT_EQ("Equilateral", determineTriangleType(100,100,100));
        EXPECT_EQ("Equilateral", determineTriangleType(199,199,199));
        EXPECT_EQ("Equilateral", determineTriangleType(200,200,200));
        EXPECT_EQ("Isosceles", determineTriangleType(1,2,2));
        EXPECT_EQ("Isosceles", determineTriangleType(2,1,2));
        EXPECT_EQ("Isosceles", determineTriangleType(2,2,1));
        EXPECT_EQ("Isosceles", determineTriangleType(2,2,3));
        EXPECT_EQ("Isosceles", determineTriangleType(2,3,2));
        EXPECT_EQ("Isosceles", determineTriangleType(3,2,2));
        EXPECT_EQ("Isosceles", determineTriangleType(100,100,101));
        EXPECT_EQ("Isosceles", determineTriangleType(100,101,100));
        EXPECT_EQ("Isosceles", determineTriangleType(101,100,100));
        EXPECT_EQ("Isosceles", determineTriangleType(198,198,199));
        EXPECT_EQ("Isosceles", determineTriangleType(198,199,198));
        EXPECT_EQ("Isosceles", determineTriangleType(199,198,198));
        EXPECT_EQ("Isosceles", determineTriangleType(199,199,200));
        EXPECT_EQ("Isosceles", determineTriangleType(199,200,199));
        EXPECT_EQ("Isosceles", determineTriangleType(200,199,199));
        EXPECT_EQ("Scalence", determineTriangleType(2,3,4));
        EXPECT_EQ("Scalence", determineTriangleType(4,2,3));
        EXPECT_EQ("Scalence", determineTriangleType(3,4,2));
        EXPECT_EQ("Scalence", determineTriangleType(3,4,5));
        EXPECT_EQ("Scalence", determineTriangleType(5,3,4));
        EXPECT_EQ("Scalence", determineTriangleType(4,5,3));
        EXPECT_EQ("Scalence", determineTriangleType(99,100,101));
        EXPECT_EQ("Scalence", determineTriangleType(101,99,100));
        EXPECT_EQ("Scalence", determineTriangleType(100,101,99));
        EXPECT_EQ("Scalence", determineTriangleType(197,199,200));
        EXPECT_EQ("Scalence", determineTriangleType(200,197,199));
        EXPECT_EQ("Scalence", determineTriangleType(199,200,197));
        EXPECT_EQ("Scalence", determineTriangleType(198,199,200));
        EXPECT_EQ("Scalence", determineTriangleType(200,198,199));
        EXPECT_EQ("Scalence", determineTriangleType(199,200,198));
        EXPECT_EQ("Not a triangle", determineTriangleType(1,1,2));
        EXPECT_EQ("Not a triangle", determineTriangleType(2,1,1));
        EXPECT_EQ("Not a triangle", determineTriangleType(2,1,1));
        EXPECT_EQ("Not a triangle", determineTriangleType(1,1,4));
        EXPECT_EQ("Not a triangle", determineTriangleType(4,1,1));
        EXPECT_EQ("Not a triangle", determineTriangleType(1,4,1));
        EXPECT_EQ("Not a triangle", determineTriangleType(1,99,100));
        EXPECT_EQ("Not a triangle", determineTriangleType(100,1,99));
        EXPECT_EQ("Not a triangle", determineTriangleType(99,100,1));
        EXPECT_EQ("Not a triangle", determineTriangleType(1,198,199));
        EXPECT_EQ("Not a triangle", determineTriangleType(199,1,198));
        EXPECT_EQ("Not a triangle", determineTriangleType(198,199,1));
        EXPECT_EQ("Not a triangle", determineTriangleType(1,199,200));
        EXPECT_EQ("Not a triangle", determineTriangleType(200,1,199));
        EXPECT_EQ("Not a triangle", determineTriangleType(199,200,1));
}

//==============================================================

//DecisionTable
TEST(IsTriangleDecisionTable, determineTriangleType) {
        EXPECT_EQ("Not a triangle", determineTriangleType(4,1,2));
        EXPECT_EQ("Not a triangle", determineTriangleType(1,4,2));
        EXPECT_EQ("Not a triangle", determineTriangleType(1,2,4));
        EXPECT_EQ("Equilateral", determineTriangleType(5,5,5));
        EXPECT_EQ("Isosceles", determineTriangleType(2,2,3));
        EXPECT_EQ("Isosceles", determineTriangleType(2,3,2));
        EXPECT_EQ("Isosceles", determineTriangleType(3,2,2));
        EXPECT_EQ("Scalence", determineTriangleType(3,4,5));
}

